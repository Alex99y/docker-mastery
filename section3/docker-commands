## Chequear las versiones de docker y ver las configuraciones
docker
docker version
docker info
docker container run


## Iniciar el primer contenedor, el servidor  (proxy) nginx
// salida estandar por consola
docker container run --publish 80:80 nginx
// Demonio! -d = --detach = En background
docker container run --publish 80:80 --detach nginx
// Enlista los contenedores ejecutandose 
docker container ls
// Pausar el contenedor con el id que inicia en 580 (Puede escribirse el id completamente)
docker container stop 580
// Ver que el contenedor desapareci√≥
docker container ls
// Enlistar todos los contenedores (Pausados o no)
docker container ls -a
//  Iniciar contenedor proxy
docker container run --publish 80:80 --detach --name webhost nginx
// Chequear los logs del contenedor webhost
docker container logs webhost
// Ver los procesos de los contenedores
docker container top
docker container top webhost
// Eliminar los contenedores 
docker container rm 580 328 5fa
// Chequear que los contenedores estan eliminados
docker container ls


## Mas comandos de docker

docker run --name mongo -d mongo
docker ps
docker top mongo
docker stop mongo
docker ps
docker top mongo
docker start mongo
docker ps
docker top mongo

## Monitoreo de contenedores

docker container run -d --name nginx nginx
docker container run -d --name mysql -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql
docker container ls
docker container top mysql
docker container top nginx
docker container inspect mysql
docker container stats --help
docker container stats
docker container ls

## Conectarse a un contenedor

docker container run -help
docker container run -it --name proxy nginx bash
docker container ls
docker container ls -a
docker container run -it --name ubuntu ubuntu
docker container ls
docker container ls -a
docker container start --help
docker container start -ai ubuntu
docker container exec --help
docker container exec -it mysql bash
docker container ls
docker pull alpine
docker image ls
docker container run -it alpine bash
docker container run -it alpine sh

## Redes en docker

docker container run -p 80:80 --name webhost -d nginx
docker container port webhost
docker container inspect --format '{{ .NetworkSettings.IPAddress }}' webhost

## Redes virtuales en docker

docker network ls
docker network inspect bridge
docker network ls
docker network create my_app_net
docker network ls
docker network create --help
docker container run -d --name new_nginx --network my_app_net nginx
docker network inspect my_app_net
docker network --help
docker network connect
docker container inspect TAB COMPLETION
docker container disconnect TAB COMPLETION
docker container inspect

## DNS en docker

docker container ls
docker network inspect TAB COMPLETION
docker container run -d --name my_nginx --network my_app_net nginx
docker container inspect TAB COMPLETION
docker container exec -it my_nginx ping new_nginx
docker container exec -it new_nginx ping my_nginx
docker network ls
docker container create --help

